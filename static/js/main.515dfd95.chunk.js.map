{"version":3,"sources":["components/pdf/zhao.pdf","components/Header.js","components/Project.js","components/pages/About.js","components/pages/Contact.js","components/PortfolioContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavTabs","props","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","handlePageChange","currentPage","Projects","Card","style","width","class","Title","Body","About","Project","Pdf","target","Component","Contact","Text","Portfolio","state","page","setState","renderPage","this","App","PortfolioContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,6LC4B5BC,MAxBf,SAAiBC,GACf,OAEE,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACzD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,gBACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,SACZQ,QAAS,kBAAMf,EAAMgB,iBAAiB,UACrCH,UAAiC,UAAtBb,EAAMiB,YAA0B,kBAAoB,YAFnE,SAGA,kBAACL,EAAA,EAAIE,KAAL,CAAUP,KAAK,WACVQ,QAAS,kBAAMf,EAAMgB,iBAAiB,YACtCH,UAAiC,YAAtBb,EAAMiB,YAA4B,kBAAoB,YAFtE,e,wBCiBSC,MA7Bf,WACI,OACI,yBAAKL,UAAU,YACX,kBAACM,EAAA,EAAD,CAAMN,UAAU,cAAcO,MAAO,CAAEC,MAAO,UAC1C,yBAAKC,MAAM,aACP,kBAACH,EAAA,EAAKI,MAAN,2BACA,kBAACJ,EAAA,EAAKK,KAAN,+TACA,kBAACL,EAAA,EAAKL,KAAN,CAAWP,KAAK,yDAAhB,iBAGR,kBAACY,EAAA,EAAD,CAAMN,UAAU,cAAcO,MAAO,CAAEC,MAAO,UAC1C,yBAAKC,MAAM,aACP,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,KAAN,2MACA,kBAACL,EAAA,EAAKL,KAAN,CAAWP,KAAK,gDAAhB,iBAGR,kBAACY,EAAA,EAAD,CAAMN,UAAU,cAAcO,MAAO,CAAEC,MAAO,UAC1C,yBAAKC,MAAM,aACP,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,KAAN,iBACA,kBAACL,EAAA,EAAKL,KAAN,CAAWP,KAAK,KAAhB,gBCNLkB,E,uKAVX,OACE,yBAAKZ,UAAY,mBACb,kBAACa,EAAD,MAEF,uBAAGnB,KAAQoB,IAAKC,OAAS,UAAzB,2B,GARYC,aCmBLC,EApBC,kBAMhB,kBAACX,EAAA,EAAD,CAAMN,UAAU,eACd,kBAACM,EAAA,EAAKK,KAAN,KACE,kBAACL,EAAA,EAAKI,MAAN,mBACA,kBAACJ,EAAA,EAAKY,KAAN,0BACkB,6BADlB,6BAEwC,6BAFxC,uCAGoD,6BAHpD,WCuBWC,E,4MA7BbC,MAAQ,CACNhB,YAAa,S,EAGfD,iBAAmB,SAAAkB,GACjB,EAAKC,SAAS,CAAElB,YAAaiB,K,EAG/BE,WAAa,WACd,MAA+B,UAA3B,EAAKH,MAAMhB,YACH,kBAAC,EAAD,MAEA,kBAAC,EAAD,O,uDAKT,OACE,6BACE,kBAAC,EAAD,CACEA,YAAaoB,KAAKJ,MAAMhB,YACxBD,iBAAkBqB,KAAKrB,mBAExBqB,KAAKD,kB,GAxBUP,aCETS,G,MAFH,kBAAM,kBAACC,EAAD,QCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.515dfd95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zhao.2afc41b4.pdf\";","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction NavTabs(props) {\r\n  return (\r\n\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n  <Navbar.Brand href=\"#home\">Zhaoyang Xia</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"#about\"\r\n         onClick={() => props.handlePageChange(\"About\")}\r\n          className={props.currentPage === \"About\" ? \"nav-link active\" : \"nav-link\"}>About</Nav.Link>\r\n      <Nav.Link href=\"#contact\"\r\n           onClick={() => props.handlePageChange(\"Contact\")}\r\n           className={props.currentPage === \"Contact\" ? \"nav-link active\" : \"nav-link\"}>Contact</Nav.Link>\r\n      \r\n    </Nav>\r\n\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default NavTabs;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Projects() {\r\n    return (\r\n        <div className=\"projects\">\r\n            <Card className=\"text-center\" style={{ width: '40rem' }}>\r\n                <div class=\"card-body\">\r\n                    <Card.Title>Personal-dashboard</Card.Title>\r\n                    <Card.Body>Personal Dashboard is a user specific home page designed to simplify and condense all relevant information for the day onto one page. With news, weather, stock market data, live traffic maps, a scheduler and links to facebook, twitter, github, linkedIn and google plus. this is a one stop HUD for your browser.</Card.Body>\r\n                    <Card.Link href=\"https://github.com/ZhaoyangXia0204/personal-dashboard\">Github Link</Card.Link>\r\n                </div>\r\n            </Card>\r\n            <Card className=\"text-center\" style={{ width: '40rem' }}>\r\n                <div class=\"card-body\">\r\n                    <Card.Title>DonorSpot</Card.Title>\r\n                    <Card.Body>This full-stack web application will allow users to find charities that they wish to donate to. In addition, users can create an account and create a charity/raise funds for a particuluar cause.</Card.Body>\r\n                    <Card.Link href=\"https://github.com/ZhaoyangXia0204/DonorSpot\">Github Link</Card.Link>\r\n                </div>\r\n            </Card>\r\n            <Card className=\"text-center\" style={{ width: '40rem' }}>\r\n                <div class=\"card-body\">\r\n                    <Card.Title>Project 3</Card.Title>\r\n                    <Card.Body>project3</Card.Body>\r\n                    <Card.Link href=\"#\">project3</Card.Link>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport Pdf from '../pdf/zhao.pdf';\r\nimport Projects from '../Project'\r\n\r\nclass About extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className = \"App text-center\">\r\n          <Projects/>\r\n\r\n        <a href = {Pdf} target = \"_blank\">ZhaoyangXia Resume</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst Contact = () => (\r\n\r\n\r\n    \r\n\r\n\r\n<Card className=\"text-center\">\r\n  <Card.Body>\r\n    <Card.Title>Contact Me</Card.Title>\r\n    <Card.Text>\r\n    Name: Zhaoyang Xia<br/>\r\n                  Phone Number: 848-565-8272<br/>\r\n                    E-mail: zx70@scarletmail.rutgers.edu<br/>    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n\r\n\r\n\r\n)\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport NavTabs from \"./Header\";\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\n\r\nclass Portfolio extends Component {\r\n  state = {\r\n    currentPage: \"About\"\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  renderPage = () => {\r\n if (this.state.currentPage === \"About\") {\r\n      return <About />;\r\n    } else {\r\n      return <Contact />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavTabs\r\n          currentPage={this.state.currentPage}\r\n          handlePageChange={this.handlePageChange}\r\n        />\r\n        {this.renderPage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;","import React from \"react\";\nimport PortfolioContainer from \"./components/PortfolioContainer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => <PortfolioContainer />;\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}